package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"encoding/json"
	"errors"
	"fmt"
	"serverGo/graph/model"
	u "serverGo/utils"
)

// GetGameDetails is the resolver for the getGameDetails field.
func (r *queryResolver) GetGameDetails(ctx context.Context, steamAppid int) (*model.GDetailsRes, error) {
	end, err := u.MakePublicEndpoint("getGameDetails")

	if err != nil {
		return nil, err
	}

	end.AddQueries(u.QueriesStruct{Key: "appids", Val: steamAppid})

	go func() {
		r.Resolver.FetchAPI(ctx, string(steamAppid), end.URL.String())
	}()

	<-r.Resolver.ResultsChan

	var wrapper map[string]json.RawMessage

	fmt.Println("\n", string(r.BodyResponse))

	if err := json.Unmarshal(r.BodyResponse, &wrapper); err != nil {
		return nil, err
	}

	isReal := wrapper[string(steamAppid)]

	if len(isReal) == 0 {
		return nil, errors.New("something went wrong while parsing the json")
	}

	var finalStruct model.GDetailsRes
	if err := json.Unmarshal(isReal, &finalStruct); err != nil {
		return nil, errors.New("failed to unmarshal JSON into GDetailsRes: " + err.Error())
	}

	fmt.Println("\n", string(r.BodyResponse))
	fmt.Println("\n", finalStruct)

	return nil, nil
}

// GetUserOwnedGames is the resolver for the getUserOwnedGames field.
func (r *queryResolver) GetUserOwnedGames(ctx context.Context, steamid int) ([]*model.UOGamesRes, error) {
	return nil, nil
}

// GetPlayerSummaries is the resolver for the getPlayerSummaries field.
func (r *queryResolver) GetPlayerSummaries(ctx context.Context, steamids []int) ([]*model.PSummariesRes, error) {
	panic(fmt.Errorf("not implemented: GetPlayerSummaries - getPlayerSummaries"))
}

// GetFriendList is the resolver for the getFriendList field.
func (r *queryResolver) GetFriendList(ctx context.Context, steamids []int) ([]*model.FListRes, error) {
	panic(fmt.Errorf("not implemented: GetFriendList - getFriendList"))
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
